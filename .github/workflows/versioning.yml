name: Create Version Tag

on:
  push:
    branches:
      - main

jobs:
  create_version_tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history and tags

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get the current version
        id: get_version
        run: |
          if git describe --tags --abbrev=0 2>/dev/null; then
            echo "version=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          else
            echo "version=v0.0.0" >> $GITHUB_ENV
          fi

      - name: Determine version bump
        id: determine_bump
        run: |
          version=${{ env.version }}
          echo "Current version: $version"
          
          # Check commit message for version bump indicators
          commit_msg=$(git log -1 --pretty=%B)
          echo "Commit message: $commit_msg"
          
          bump="patch"
          if echo "$commit_msg" | grep -qE '^(feat|feature|minor):'; then
            bump="minor"
            echo "Detected minor version bump"
          elif echo "$commit_msg" | grep -qE '^(BREAKING CHANGE|major):'; then
            bump="major"
            echo "Detected major version bump"
          else
            echo "Detected patch version bump"
          fi
          echo "bump=$bump" >> $GITHUB_ENV

      - name: Increment version
        id: increment_version
        run: |
          version=${{ env.version }}
          bump=${{ env.bump }}
          echo "Current version: $version"
          
          # Extract version parts
          version_no_v="${version#v}"
          IFS='.' read -r -a parts <<< "$version_no_v"
          major=${parts[0]}
          minor=${parts[1]}
          patch=${parts[2]}
          
          # Calculate new version
          if [ "$bump" = "major" ]; then
            new_version="v$((major + 1)).0.0"
          elif [ "$bump" = "minor" ]; then
            new_version="v$major.$((minor + 1)).0"
          else
            new_version="v$major.$minor.$((patch + 1))"
          fi
          echo "New version will be: $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Create new version tag
        run: |
          new_version=${{ env.new_version }}
          
          # Check if tag already exists
          if ! git ls-remote --tags origin refs/tags/$new_version | grep -q $new_version; then
            echo "Creating new tag: $new_version"
            git tag $new_version
            git push origin $new_version
          else
            echo "Tag $new_version already exists. Skipping tag creation."
          fi
